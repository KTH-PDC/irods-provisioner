# irods-provisioner
#
# roles/postgres/tasks/main.yml - Ansible task for configuring a replicated postgres database
# Author: Ilari Korhonen, KTH Royal Institute of Technology
#
# Copyright (C) 2016-2017 KTH Royal Institute of Technology. All rights reserved.
# See LICENSE file for more information.

---

    - name: required package repositories
      yum:
        name:
          - epel-release
          - https://download.postgresql.org/pub/repos/yum/reporpms/EL-7-x86_64/pgdg-redhat-repo-latest.noarch.rpm
        state: installed

    - name: PostgreSQL 9.6 database server and python bindings
      yum:
        name:
          - postgresql96-contrib
          - postgresql96-libs
          - postgresql96-odbc
          - postgresql96-server
          - pgpool-II-96-extensions
          - python-psycopg2
        state: latest
        disablerepo: "pgdg12,pgdg11,pgdg10"

    - name: initialize postgres database on initial master node
      shell: "PGSETUP_INITDB_OPTIONS='-E UTF-8' {{ postgres_prefix }}/bin/postgresql96-setup initdb"
      args:
        creates: "{{ postgres_datadir }}/postgresql.conf"
      when: ha_state == "master"

    - name: set postgres service enabled on database nodes
      service: name=postgresql-9.6 enabled=yes

    - name: write postgresql configurations on postgres master
      become: yes
      become_user: postgres
      template: src={{ item.srcfile }} dest={{ item.destfile }} owner=postgres mode=0600
      when: ha_state == "master"
      with_items:
        - { srcfile: "../templates/postgres-pg_hba.conf.j2", destfile: "{{ postgres_datadir }}//pg_hba.conf" }
        - { srcfile: "../templates/postgres-postgresql.conf.j2", destfile: "{{ postgres_datadir }}/postgresql.conf" }
      notify: restart postgres

    - name: postgres service started on postgres master
      service: name=postgresql-9.6 state=started
      when: ha_state == "master"

    - name: configure postgres superuser role
      become: yes
      become_user: postgres
      postgresql_user: name="postgres" password={{ postgres_passwd }} encrypted=yes
      when: ha_state == "master"

    - name: configure postgres replication role
      become: yes
      become_user: postgres
      postgresql_user: name="{{ replication_user }}" password="{{ replication_passwd }}" role_attr_flags="LOGIN,REPLICATION" encrypted=yes
      when: ha_state == "master" and replication_user is defined

    - name: configure pgpool-II extensions for template1 on postgres master
      become: yes
      become_user: postgres
      command: "{{ postgres_prefix }}/bin/psql -f {{ postgres_prefix }}/share/extension/pgpool-recovery.sql template1 -o {{ postgres_rootdir }}/pgpool-recovery.log"
      args:
        creates: "{{ postgres_rootdir }}/pgpool-recovery.log"
      when: ha_state == "master"

    - name: configure postgres credentials for replication
      become: yes
      become_user: postgres
      template: src="../templates/postgres-pgpass.j2" dest="{{ postgres_homedir }}/.pgpass" owner=postgres group=postgres mode=0600
      when: replication_user is defined

    - name: basebackup on postgres slave
      become: yes
      become_user: postgres
      command: "{{ postgres_prefix }}/bin/pg_basebackup -R -D {{ postgres_datadir }} -U {{ replication_user }} -X stream -h {{ hostvars[icat_master_host]['ha_ipaddr'] }}"
      args:
        creates: "{{ postgres_datadir }}/postgresql.conf"
      when: ha_state == "slave"
      notify: restart postgres

    - name: postgres service started on postgres slave
      service: name=postgresql-9.6 state=started
      when: ha_state == "slave"

    - name: add role execution info to irods-provisioner manifest file
      shell: echo "# role postgres provisioned successfully at {{ ansible_date_time.iso8601_micro }}, ha_state={{ ha_state }}" >> /etc/irods-provisioner.manifest
