# irods-provisioner
#
# roles/irods-nagios/tasks/main.yml - Ansible playbook for configuring a Nagios monitoring service for iRODS
# Author: Ilari Korhonen, KTH Royal Institute of Technology
#
# Copyright (C) 2016-2017 KTH Royal Institute of Technology. All rights reserved.
# See LICENSE file for more information.

---

    - name: required package repositories and packages
      yum: name={{ item }} state=installed
      with_items:
        - epel-release
        - python-passlib

    - name: nagios packages
      yum: name={{ item }} state=latest
      with_items:
        - nagios
        - nagios-common
        - nagios-plugins

    - name: nagios plugins
      yum: name={{ item }} state=latest
      with_items:
        - nagios-plugins-ping
        - nagios-plugins-load
        - nagios-plugins-users
        - nagios-plugins-http
        - nagios-plugins-disk
        - nagios-plugins-ssh
        - nagios-plugins-swap
        - nagios-plugins-procs

    - name: iRODS packages (version 4.1.11)
      yum: name={{ item }} state=installed
      with_items:
        - ftp://ftp.renci.org/pub/irods/releases/4.1.11/centos7/irods-runtime-4.1.11-centos7-x86_64.rpm

    - name: iRODS iping for nagios
      yum: name=https://github.com/KTH-PDC/rit-irods-clients/releases/download/1.0.0/rit-irods-clients-1.0.0-1.x86_64.rpm state=installed

    - name: iRODS iping plugin for nagios
      copy: src="nagios-iping.sh" dest="/usr/lib64/nagios/plugins/iping.sh" owner=root group=root mode=0755

    - name: SELinux for nagios - allow httpd to connect to nagios
      command: "setsebool -P httpd_can_network_connect true"
      when: ansible_selinux['status'] != 'disabled'

    - name: SELinux for nagios - permissive mode required!
      selinux: policy=targeted state=permissive
      when: ansible_selinux['status'] != 'disabled'

    - name: nagios admin password
      htpasswd: path=/etc/nagios/passwd name=nagiosadmin password={{ nagios_admin_passwd }}

    - name: nagios irods configuration
      template: src=../templates/nagios-irods.cfg.j2 dest=/etc/nagios/conf.d/irods.cfg owner=nagios group=nagios mode=0644

    - name: nagios sudo configuration for irods resource management
      template: src=../templates/nagios-sudoers.j2 dest=/etc/sudoers.d/nagios owner=root group=root mode=0600

    - name: nagios irods resource state change script
      template: src=../templates/nagios-update_irods_resc_state.sh.j2 dest=/usr/lib64/nagios/plugins/update_irods_resc_state.sh owner=root group=root mode=0755

    - name: irods resource state change interface script
      copy: src=irods-update_irods_resc_state.sh dest={{ irods_home }}/iRODS/scripts/update_irods_resc_state.sh owner={{ irods_service_account }} group={{ irods_service_group }} mode=0755

    - name: nagios httpd virtual host config
      template: src=../templates/httpd-nagios.conf.j2 dest=/etc/httpd/conf.d/nagios.conf owner=root group=root mode=0644

    - name: nagios service enabled and (re)started
      service: name=nagios enabled=yes state=restarted

    - name: httpd service enabled and (re)started
      service: name=httpd enabled=yes state=restarted

    - name: add role execution info to irods-provisioner manifest file
      shell: echo "# role irods-nagios provisioned successfully at {{ ansible_date_time.iso8601_micro }}" >> /etc/irods-provisioner.manifest
