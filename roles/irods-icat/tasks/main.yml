# irods-provisioner
#
# roles/irods-icat/tasks/main.yml - Ansible playbook for configuring iRODS Catalog Services (iCAT)
# Author: Ilari Korhonen, KTH Royal Institute of Technology
#
# Copyright (C) 2016-2019 KTH Royal Institute of Technology. All rights reserved.
# See LICENSE file for more information.

---
    - name: required base package repositories
      yum:
        name:
          - epel-release
        state: installed

    - name: iRODS RPM package repository signing key
      shell: "rpm --import https://packages.irods.org/irods-signing-key.asc"

    - name: iRODS RPM package repository
      get_url:
        url: https://packages.irods.org/renci-irods.yum.repo
        dest: /etc/yum.repos.d/renci-irods.yum.repo

    - name: iRODS version 4.2.x latest
      yum:
        name:
          - unixODBC
          - irods-runtime
          - irods-server
          - irods-database-plugin-postgres
        state: installed

    - name: configure database roles on postgres master
      become: yes
      become_user: postgres
      postgresql_user: name={{ item.name }} password={{ item.password }} role_attr_flags={{ item.flags }} encrypted=yes
      when: ha_state == "master"
      with_items:
        - { name: "{{ icat_db_user }}", password: "{{ icat_db_passwd }}", flags: "LOGIN" }

    - name: configure databases on postgres master
      become: yes
      become_user: postgres
      postgresql_db: name={{ item.name }} owner={{ item.owner }} encoding="UTF-8" template="template1" login_user="postgres"
      when: ha_state == "master"
      with_items:
        - { name: "{{ icat_db_name }}", owner: "{{ icat_db_user }}" }

    - name: iRODS service group
      group: name={{ __irods_service_group }} state=present

    - name: iRODS service account
      user: name={{ __irods_service_account }} group={{ __irods_service_group }} comment="iRODS Administrator" home={{ __irods_home_dir }}

    - name: iRODS service account environment directory
      file: path="{{ __irods_home_dir }}/.irods" state=directory owner={{ __irods_service_account }} group={{ __irods_service_group }} mode=0700 

    - name: iRODS setup JSON, for (re)install of the server
      template: src="../../../templates/irods-unattended_installation.json.j2" dest="{{ __irods_home_dir }}/unattended_installation.json" mode=0600

    # - name: configure iRODS iCAT
    #   template: src={{ item.srcfile }} dest={{ item.destfile }} owner={{ irods_service_account }} group={{ irods_service_group }} mode=0600
    #   with_items:
    #     - { srcfile: "../templates/irods-dot-odbc.ini.j2", destfile: "{{ irods_home }}/.odbc.ini" }
    #     - { srcfile: "../templates/irods-dot-pgpass.j2", destfile: "{{ irods_home }}/.pgpass" }
    #     - { srcfile: "../../../templates/irods-irods_environment.json.j2", destfile: "{{ irods_home }}/.irods/irods_environment.json" }
    #     - { srcfile: "../templates/irods-service_account.config.j2", destfile: "/etc/irods/service_account.config" }
    #     - { srcfile: "../templates/irods-database_config.json.j2", destfile: "/etc/irods/database_config.json" }
    #     - { srcfile: "../templates/irods-server_config.json.j2", destfile: "/etc/irods/server_config.json" }
    #     - { srcfile: "../../../templates/irods-core-override.re.j2", destfile: "/etc/irods/core-override.re" }
    #   notify: restart irods

    - name: add role execution info to irods-provisioner manifest file
      shell: echo "# role irods-icat provisioned successfully at {{ ansible_date_time.iso8601_micro }}, ha_state={{ ha_state }}" >> /etc/irods-provisioner.manifest
